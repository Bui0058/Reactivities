[{"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\index.tsx":"1","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx":"4","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\activities\\forms\\ActivityForm.tsx":"8","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"9","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"10","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts":"11","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx":"12","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\layout\\scrollToTop.tsx":"13","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"14","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx":"15","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx":"16","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx":"17","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx":"18","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\layout\\NotFound.tsx":"19","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\common\\form\\TextInput.tsx":"20","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\common\\form\\TextAreaInput.tsx":"21","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\common\\options\\categoryOptions.ts":"22","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\common\\form\\SelectInput.tsx":"23","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\common\\form\\DateInput.tsx":"24","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\common\\util\\util.ts":"25","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\models\\activity.ts":"26","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\stores\\rootStore.ts":"27","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\stores\\userStore.ts":"28","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\user\\LoginForm.tsx":"29","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\stores\\commonStore.ts":"30","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\stores\\modalStore.ts":"31","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx":"32","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\common\\form\\ErrorMessage.tsx":"33","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\user\\RegisterForm.tsx":"34","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItemAttendees.tsx":"35"},{"size":975,"mtime":1608026199410,"results":"36","hashOfConfig":"37"},{"size":425,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":2305,"mtime":1608187668113,"results":"39","hashOfConfig":"37"},{"size":1631,"mtime":1608175654629,"results":"40","hashOfConfig":"37"},{"size":914,"mtime":1608271270871,"results":"41","hashOfConfig":"37"},{"size":977,"mtime":1608187922002,"results":"42","hashOfConfig":"37"},{"size":1606,"mtime":1608592476019,"results":"43","hashOfConfig":"37"},{"size":5469,"mtime":1608157496955,"results":"44","hashOfConfig":"37"},{"size":2612,"mtime":1608592476011,"results":"45","hashOfConfig":"37"},{"size":354,"mtime":1608177542248,"results":"46","hashOfConfig":"37"},{"size":5969,"mtime":1608593409414,"results":"47","hashOfConfig":"37"},{"size":1765,"mtime":1608592476021,"results":"48","hashOfConfig":"37"},{"size":256,"mtime":1607754215366,"results":"49","hashOfConfig":"37"},{"size":2080,"mtime":1608592476015,"results":"50","hashOfConfig":"37"},{"size":2308,"mtime":1608592476017,"results":"51","hashOfConfig":"37"},{"size":1453,"mtime":1608006822990,"results":"52","hashOfConfig":"37"},{"size":1801,"mtime":1607806112925,"results":"53","hashOfConfig":"37"},{"size":1667,"mtime":1608592476018,"results":"54","hashOfConfig":"37"},{"size":629,"mtime":1607983981245,"results":"55","hashOfConfig":"37"},{"size":672,"mtime":1607992220905,"results":"56","hashOfConfig":"37"},{"size":655,"mtime":1607992809377,"results":"57","hashOfConfig":"37"},{"size":339,"mtime":1607993783491,"results":"58","hashOfConfig":"37"},{"size":813,"mtime":1607993923624,"results":"59","hashOfConfig":"37"},{"size":1009,"mtime":1608004626835,"results":"60","hashOfConfig":"37"},{"size":1052,"mtime":1608592476012,"results":"61","hashOfConfig":"37"},{"size":932,"mtime":1608592476013,"results":"62","hashOfConfig":"37"},{"size":792,"mtime":1608593409414,"results":"63","hashOfConfig":"37"},{"size":1590,"mtime":1608593409414,"results":"64","hashOfConfig":"37"},{"size":2009,"mtime":1608185523142,"results":"65","hashOfConfig":"37"},{"size":907,"mtime":1608593409414,"results":"66","hashOfConfig":"37"},{"size":618,"mtime":1608593315786,"results":"67","hashOfConfig":"37"},{"size":516,"mtime":1608183082551,"results":"68","hashOfConfig":"37"},{"size":700,"mtime":1608186795144,"results":"69","hashOfConfig":"37"},{"size":2202,"mtime":1608186926747,"results":"70","hashOfConfig":"37"},{"size":757,"mtime":1608592476016,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"vknr8j",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\index.tsx",[],["150","151"],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",["152","153"],"import React, { Fragment, useContext, useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"../../features/nav/NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport {\n  Route,\n  RouteComponentProps,\n  Switch,\n  withRouter,\n} from \"react-router-dom\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityForm from \"../../features/activities/forms/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport NotFound from \"./NotFound\";\nimport { ToastContainer } from \"react-toastify\";\nimport { LoginForm } from \"../../features/user/LoginForm\";\nimport { RootStoreContext } from \"../stores/rootStore\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport  ModalContainer  from \"../common/modals/ModalContainer\";\n\nconst App: React.FC<RouteComponentProps> = ({ location }) => {\n  const rootStore = useContext(RootStoreContext);\n  const {setAppLoaded, token, appLoaded} = rootStore.commonStore;\n  const {getUser} = rootStore.userStore;\n\n  useEffect(() => {\n    if (token) {\n      getUser().finally(() => setAppLoaded());\n    }\n    else {\n      setAppLoaded();\n    }\n  }, [getUser,  setAppLoaded, token])\n\n  //if (!appLoaded) return <LoadingComponent content='Loading app...' />\n\n  return (\n    <Fragment>\n      <ModalContainer/>\n      <ToastContainer position='bottom-right'/>\n\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <Fragment>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <Route exact path=\"/activities\" component={ActivityDashboard} />\n                <Route path=\"/activities/:id\" component={ActivityDetails} />\n                <Route\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <Route path='/login' component={LoginForm} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </Fragment>\n        )}\n      />\n    </Fragment>\n  );\n};\n\nexport default withRouter(observer(App));\n","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx",["154"],"import React, { useContext } from \"react\";\r\nimport { Menu, Container, Button, Dropdown, Image } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\n\r\nconst NavBar: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { isLoggedIn, user, logout } = rootStore.userStore;\r\n  return (\r\n    <Menu fixed=\"top\" inverted>\r\n      <Container>\r\n        <Menu.Item header as={NavLink} exact to=\"/\">\r\n          <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: 10 }} />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item name=\"Activities\" as={NavLink} to=\"/activities\" />\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n            positive\r\n            content=\"Create Activity\"\r\n          />\r\n        </Menu.Item>\r\n        {user && (\r\n          <Menu.Item position=\"right\">\r\n            <Image avatar spaced=\"right\" src={user.image || \"/assets/user.png\"} />\r\n            <Dropdown pointing=\"top left\" text={user.displayName}>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  as={Link}\r\n                  to={`/profile/username`}\r\n                  text=\"My profile\"\r\n                  icon=\"user\"\r\n                />\r\n                <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n        )}\r\n      </Container>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default observer(NavBar);\r\n","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",["155","156"],"import React, {useEffect, useContext} from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport ActivityList from './ActivityList';\r\nimport { observer } from 'mobx-react-lite';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\n\r\n\r\nconst ActivityDashboard: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {loadActivities, loadingInitial} = rootStore.activityStore;\r\n\r\n  useEffect(() => {\r\n    loadActivities();\r\n  }, [loadActivities]);\r\n\r\n  if (loadingInitial)\r\n    return <LoadingComponent content=\"Loading activities\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityList />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <h2>Activity filters</h2>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\n\r\nexport default observer(ActivityDashboard);","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",["157"],"import React, { useContext, Fragment } from 'react';\r\nimport { Item, Label } from 'semantic-ui-react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport ActivityStore from '../../../app/stores/activityStore';\r\nimport ActivityListItem from './ActivityListItem';\r\nimport {  RootStoreContext } from '../../../app/stores/rootStore';\r\n\r\nconst ActivityList: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { activitiesByDate } = rootStore.activityStore;\r\n  return (\r\n    <Fragment>\r\n      {activitiesByDate.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Label size='large' color='blue'>\r\n            {group}\r\n          </Label>\r\n          <Item.Group divided>\r\n            {activities.map(activity => (\r\n              <ActivityListItem key={activity.id} activity={activity} />\r\n            ))}\r\n          </Item.Group>\r\n        </Fragment>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityList);\r\n","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",["158"],"import React, { useContext, useEffect } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport ActivityStore from '../../../app/stores/activityStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\r\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\r\nimport ActivityDetailedChat from './ActivityDetailedChat';\r\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\n\r\ninterface DetailParams {\r\n  id: string;\r\n}\r\n\r\nconst ActivityDetails: React.FC<RouteComponentProps<DetailParams>> = ({\r\n  match,\r\n  history\r\n}) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { activity, loadActivity, loadingInitial } = rootStore.activityStore;\r\n\r\n  useEffect(() => {\r\n    loadActivity(match.params.id);\r\n  }, [loadActivity, match.params.id, history]);\r\n\r\n  if (loadingInitial || !activity)\r\n    return <LoadingComponent content='Loading activity...' />;\r\n  \r\n  if (!activity)\r\n    <h2>Actiivty not Found</h2>\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar attendees={activity.attendees} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetails);\r\n","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\activities\\forms\\ActivityForm.tsx",["159"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Segment, Form, Button, Grid } from 'semantic-ui-react';\r\nimport { ActivityFormValues } from '../../../app/models/activity';\r\nimport { v4 as uuid } from 'uuid';\r\nimport ActivityStore from '../../../app/stores/activityStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Form as FinalForm, Field } from 'react-final-form';\r\nimport TextInput from '../../../app/common/form/TextInput';\r\nimport TextAreaInput from '../../../app/common/form/TextAreaInput';\r\nimport SelectInput from '../../../app/common/form/SelectInput';\r\nimport DateInput from '../../../app/common/form/DateInput';\r\nimport { category } from '../../../app/common/options/categoryOptions';\r\nimport { combineDateAndTime } from '../../../app/common/util/util';\r\nimport {\r\n  combineValidators,\r\n  isRequired,\r\n  composeValidators,\r\n  hasLengthGreaterThan\r\n} from 'revalidate';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\n\r\nconst validate = combineValidators({\r\n  title: isRequired({ message: 'The event title is required' }),\r\n  category: isRequired('Category'),\r\n  description: composeValidators(\r\n    isRequired('Description'),\r\n    hasLengthGreaterThan(4)({\r\n      message: 'Description needs to be at least 5 characters'\r\n    })\r\n  )(),\r\n  city: isRequired('City'),\r\n  venue: isRequired('Venue'),\r\n  date: isRequired('Date'),\r\n  time: isRequired('Time')\r\n});\r\n\r\ninterface DetailParams {\r\n  id: string;\r\n}\r\n\r\nconst ActivityForm: React.FC<RouteComponentProps<DetailParams>> = ({\r\n  match,\r\n  history\r\n}) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    createActivity,\r\n    editActivity,\r\n    submitting,\r\n    loadActivity\r\n  } = rootStore.activityStore;\r\n\r\n  const [activity, setActivity] = useState(new ActivityFormValues());\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (match.params.id) {\r\n      setLoading(true);\r\n      loadActivity(match.params.id)\r\n        .then(activity => {\r\n          setActivity(new ActivityFormValues(activity));\r\n        })\r\n        .finally(() => setLoading(false));\r\n    }\r\n  }, [loadActivity, match.params.id]);\r\n\r\n  const handleFinalFormSubmit = (values: any) => {\r\n    const dateAndTime = combineDateAndTime(values.date, values.time);\r\n    const { date, time, ...activity } = values;\r\n    activity.date = dateAndTime;\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid()\r\n      };\r\n      createActivity(newActivity);\r\n    } else {\r\n      editActivity(activity);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <Segment clearing>\r\n          <FinalForm\r\n            validate={validate}\r\n            initialValues={activity}\r\n            onSubmit={handleFinalFormSubmit}\r\n            render={({ handleSubmit, invalid, pristine }) => (\r\n              <Form onSubmit={handleSubmit} loading={loading}>\r\n                <Field\r\n                  name='title'\r\n                  placeholder='Title'\r\n                  value={activity.title}\r\n                  component={TextInput}\r\n                />\r\n                <Field\r\n                  name='description'\r\n                  placeholder='Description'\r\n                  rows={3}\r\n                  value={activity.description}\r\n                  component={TextAreaInput}\r\n                />\r\n                <Field\r\n                  component={SelectInput}\r\n                  options={category}\r\n                  name='category'\r\n                  placeholder='Category'\r\n                  value={activity.category}\r\n                />\r\n                <Form.Group widths='equal'>\r\n                  <Field\r\n                    component={DateInput}\r\n                    name='date'\r\n                    date={true}\r\n                    placeholder='Date'\r\n                    value={activity.date}\r\n                  />\r\n                  <Field\r\n                    component={DateInput}\r\n                    name='time'\r\n                    time={true}\r\n                    placeholder='Time'\r\n                    value={activity.time}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Field\r\n                  component={TextInput}\r\n                  name='city'\r\n                  placeholder='City'\r\n                  value={activity.city}\r\n                />\r\n                <Field\r\n                  component={TextInput}\r\n                  name='venue'\r\n                  placeholder='Venue'\r\n                  value={activity.venue}\r\n                />\r\n                <Button\r\n                  loading={submitting}\r\n                  disabled={loading || invalid || pristine}\r\n                  floated='right'\r\n                  positive\r\n                  type='submit'\r\n                  content='Submit'\r\n                />\r\n                <Button\r\n                  onClick={\r\n                    activity.id\r\n                      ? () => history.push(`/activities/${activity.id}`)\r\n                      : () => history.push('/activities')\r\n                  }\r\n                  disabled={loading}\r\n                  floated='right'\r\n                  type='button'\r\n                  content='Cancel'\r\n                />\r\n              </Form>\r\n            )}\r\n          />\r\n        </Segment>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityForm);\r\n","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\api\\agent.ts",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\layout\\scrollToTop.tsx",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\layout\\NotFound.tsx",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\common\\form\\TextInput.tsx",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\common\\form\\TextAreaInput.tsx",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\common\\options\\categoryOptions.ts",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\common\\form\\SelectInput.tsx",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\common\\form\\DateInput.tsx",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\common\\util\\util.ts",["160"],"import { userInfo } from \"os\";\r\nimport { IActivity, IAttendee } from \"../../models/activity\";\r\nimport { IUser } from \"../../models/user\";\r\n\r\nexport const combineDateAndTime = (date: Date, time: Date) => {\r\n    const timeString = time.getHours() + ':' + time.getMinutes() + ':00';\r\n\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n    const dateString = `${year}-${month}-${day}`;\r\n\r\n    return new Date(dateString + ' ' + timeString);\r\n};\r\n\r\nexport const setActivityProps = (activity: IActivity, user: IUser) => {\r\n    activity.date = new Date(activity.date);\r\n    activity.isGoing = activity.attendees.some(\r\n      a => a.username === user.username\r\n    );\r\n    activity.isHost = activity.attendees.some(\r\n      a => a.username === user.username && a.isHost\r\n    );\r\n    return activity;\r\n};\r\n\r\nexport const createAttendee = (user: IUser) : IAttendee => {\r\n  return {\r\n    displayName: user.displayName,\r\n    isHost: false,\r\n    username: user.username,\r\n    image: user.image!\r\n\r\n  }\r\n}","F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\models\\activity.ts",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\stores\\rootStore.ts",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\stores\\userStore.ts",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\user\\LoginForm.tsx",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\stores\\commonStore.ts",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\stores\\modalStore.ts",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\app\\common\\form\\ErrorMessage.tsx",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\user\\RegisterForm.tsx",[],"F:\\FULL-STACK WEB COURSERA\\ASP_NET\\NetCore with React _ Udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItemAttendees.tsx",[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":19,"column":8,"nodeType":"167","messageId":"168","endLine":19,"endColumn":24},{"ruleId":"165","severity":1,"message":"169","line":24,"column":31,"nodeType":"167","messageId":"168","endLine":24,"endColumn":40},{"ruleId":"165","severity":1,"message":"170","line":9,"column":11,"nodeType":"167","messageId":"168","endLine":9,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":24},{"ruleId":"165","severity":1,"message":"171","line":11,"column":26,"nodeType":"167","messageId":"168","endLine":11,"endColumn":40},{"ruleId":"165","severity":1,"message":"172","line":4,"column":8,"nodeType":"167","messageId":"168","endLine":4,"endColumn":21},{"ruleId":"165","severity":1,"message":"172","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":21},{"ruleId":"165","severity":1,"message":"172","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":21},{"ruleId":"165","severity":1,"message":"173","line":1,"column":10,"nodeType":"167","messageId":"168","endLine":1,"endColumn":18},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"@typescript-eslint/no-unused-vars","'LoadingComponent' is defined but never used.","Identifier","unusedVar","'appLoaded' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'loadingInitial' is assigned a value but never used.","'ActivityStore' is defined but never used.","'userInfo' is defined but never used.","no-global-assign","no-unsafe-negation"]